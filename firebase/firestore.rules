rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }

    // Función para verificar si el usuario está accediendo a sus propios datos
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Función para verificar si el usuario es admin
    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Reglas para la colección de usuarios
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if isAuthenticated() && request.auth.uid == userId;
      allow update: if isOwner(userId) || isAdmin();
      allow delete: if isAdmin();
    }

    // Reglas para la colección de eventos
    match /events/{eventId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Reglas para la colección de artistas
    match /artists/{artistId} {
      allow read: if true;
      allow write: if isAuthenticated();
    }

    // Regla por defecto - denegar todo lo demás
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
